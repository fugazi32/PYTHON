import pandas as pd

# Read data from CSV file (replace 'your_data.csv' with your actual file path)
df = pd.read_csv('your_data.csv')

# Filter for specified approvers
approvers_to_include = ['GHI', 'ABCDEF', 'PHI', 'ABD']
df = df[df['ASSIGNED_APPROVER'].isin(approvers_to_include)]

# Combine Detokenize and DeTokenize
df['ACCESS_REQUESTED'] = df['ACCESS_REQUESTED'].str.replace('DeTokenize', 'Detokenize', case=False)

# Extract environment
df['Environment'] = df['ACCESS_REQUESTED'].str.extract(r'\((.*?)\)')

# Extract Tokenized/Detokenized
df['Action'] = df['ACCESS_REQUESTED'].apply(lambda x: 'Detokenized' if 'Detokenize' in x else 'Tokenized')

# Normalize APPROVAL_STATE values to match expected 'APPROVED' and 'REJECTED'
df['APPROVAL_STATE'] = df['APPROVAL_STATE'].str.upper().str.strip()

# Map 'APPROVE' to 'APPROVED' and 'REJECT' to 'REJECTED'
df['APPROVAL_STATE'] = df['APPROVAL_STATE'].replace({'APPROVE': 'APPROVED', 'REJECT': 'REJECTED'})

# Filter for only 'APPROVED' and 'REJECTED' states
valid_approval_states = ['APPROVED', 'REJECTED']
df_filtered = df[df['APPROVAL_STATE'].isin(valid_approval_states)]

# 1. Number of rejections and approvals per environment for Tokenized/Detokenized
result1 = df_filtered.groupby(['Environment', 'Action', 'APPROVAL_STATE']).size().unstack(fill_value=0)

# 2. Number of rejections and approvals per approver per environment
result2 = df_filtered.groupby(['ASSIGNED_APPROVER', 'Environment', 'APPROVAL_STATE']).size().unstack(fill_value=0)

# 3. Breakdown of approvals and rejections for each ACCESS_REQUESTED, showing who approved/rejected
result3 = df_filtered.groupby(['ACCESS_REQUESTED', 'APPROVAL_STATE']).agg(
    Count=('ASSIGNED_APPROVER', 'size'),
    Approvers=('ASSIGNED_APPROVER', lambda x: ', '.join(x.unique()))
).reset_index()

# Calculate total counts for each report
total_result1 = result1.sum()
total_result2 = result2.sum()
total_result3 = result3['Count'].sum()

# Convert total_result3 into a DataFrame for proper Excel writing
total_result3_df = pd.DataFrame({'ACCESS_REQUESTED': ['Total'], 'APPROVAL_STATE': ['N/A'], 'Count': [total_result3], 'Approvers': ['N/A']})

# Write results to Excel
with pd.ExcelWriter('analysis_results.xlsx') as writer:
    result1.to_excel(writer, sheet_name='Environment_Action_Approval')
    total_result1.to_excel(writer, sheet_name='Environment_Action_Approval', startrow=len(result1) + 2, header=['Total'])

    result2.to_excel(writer, sheet_name='Approver_Environment_Approval')
    total_result2.to_excel(writer, sheet_name='Approver_Environment_Approval', startrow=len(result2) + 2, header=['Total'])

    result3.to_excel(writer, sheet_name='Environment_Approval_Access')
    total_result3_df.to_excel(writer, sheet_name='Environment_Approval_Access', startrow=len(result3) + 2, index=False)

    # Add the summary of approved/rejected count per Tokenized/Detokenized in each environment
    final_result1 = result1.groupby(['Environment', 'Action']).sum()
    final_result1.to_excel(writer, sheet_name='Summary_Tokenize_Detokenize', startrow=0, header=True)
